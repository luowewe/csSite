const testcases = (() => {
  return {
    referenceImpls: {
      countTens: (ns) => ns.reduce((acc, n) => acc + (n === 10 ? 1 : 0), 0),
      sum: (ns) => ns.reduce((acc, n) => acc + n, 0),
      evens: (ns) => ns.filter((n) => n % 2 === 0),
      anyOverOneHundred: (ns) => ns.some((n) => n > 100),
      pyramid: (n) =>
        Array(n)
          .fill()
          .flatMap((_, i) => Array(i + 1).fill(i + 1)),
    },

    allCases: {
      countTens: [[[1, 10, 20, 10, 30]], [[]], [[1, 2, 3, 4, 5]], [[10]], [[10, 10, 10, 10]]],
      sum: [
        [[1, 10, 20, 10, 30]],
        [[]],
        [[1, 2, 3, 4, 5]],
        [[10]],
        [[10, 10, 10, 10]],
        [[-1, 2, -2, 1, -13, 7, 6]],
      ],
      evens: [
        [[1, 10, 20, 10, 30]],
        [[]],
        [[1, 2, 3, 4, 5]],
        [[10]],
        [[10, 10, 10, 10]],
        [[-1, 2, -2, 1, -13, 7, 6]],
      ],
      anyOverOneHundred: [
        [[]],
        [[1, 2, 3, 4, 5]],
        [[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]],
        [[-101, 0, 100]],
        [[101]],
        [[99, 98, 100, 101]],
        [[101, 100, 99]],
      ],
      pyramid: [[0], [1], [2], [5]],
    },
  };
})();
